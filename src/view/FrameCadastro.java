package view;


import controller.Altera;
import controller.Busca;
import controller.Cadastra;
import java.sql.SQLException;
import model.Militar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Frame para o Cadastro do Militar e Edição do mesmo
 * @author Luiz Ferreira
 * @since 26/08/2017
 */
public class FrameCadastro extends javax.swing.JFrame {
    FrameMenu menu = new FrameMenu();
    Militar militar = new Militar();
     int codigoGlobal = 0;
    
   
    public FrameCadastro() {
        initComponents();
    }
    
    public FrameCadastro(FrameMenu militar){
         initComponents();
         setLocationRelativeTo(null);
         menu = militar;
        
    }
    
    //Deixei como publico pra ve se vai funciona


//deixei como publico mas era private
 /* private void listarTodosClientesArray(){
        
        for(int i=0;i<sold.size(); i++){
            
            System.out.println("Nome: " + milit.get(i).getNome());
            System.out.println("codigo: "+milit.get(i).getCodigo()+"\n");            
            System.out.println("Alimentar"+milit.get(i).isAlimentarCavalos());
            System.out.println("CozinharARMOCO"+milit.get(i).isCozinharArmoco());
            System.out.println("COzinharJANTA"+milit.get(i).isCozinharJanta());
            System.out.println("DESCANCAR"+milit.get(i).isDescascar());
            System.out.println("BANDEIRA"+milit.get(i).isLevantarBandeira());
            System.out.println("LIMPARCOZINHA"+milit.get(i).isLimparCozinha());
            System.out.println("LimparEstabulos"+milit.get(i).isLimparEstabulos());
            System.out.println("RECARREGAR"+milit.get(i).isRecarregarArmamento());
            System.out.println("ENCANAMENTO"+milit.get(i).isTrocarEncanamento());
            
        }
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        JpDadosMilitar = new javax.swing.JPanel();
        LbCodigo = new javax.swing.JLabel();
        LbNome = new javax.swing.JLabel();
        LbSexo = new javax.swing.JLabel();
        LbCpf = new javax.swing.JLabel();
        LbRg = new javax.swing.JLabel();
        LbNascimento = new javax.swing.JLabel();
        LbIdade = new javax.swing.JLabel();
        LbEstado = new javax.swing.JLabel();
        ftfCodigo = new javax.swing.JFormattedTextField();
        tfNome = new javax.swing.JTextField();
        ftfCpf = new javax.swing.JFormattedTextField();
        ftfRg = new javax.swing.JFormattedTextField();
        ftfNascimento = new javax.swing.JFormattedTextField();
        ftfIdade = new javax.swing.JFormattedTextField();
        rbMasculino = new javax.swing.JRadioButton();
        rbFeminino = new javax.swing.JRadioButton();
        cbEstado = new javax.swing.JComboBox<>();
        lbSubtenente = new javax.swing.JLabel();
        rbSoldado = new javax.swing.JRadioButton();
        lbAspirante = new javax.swing.JLabel();
        rbCabo = new javax.swing.JRadioButton();
        lbCabo = new javax.swing.JLabel();
        lbTerceiroSargento = new javax.swing.JLabel();
        rbTerceiroSargento = new javax.swing.JRadioButton();
        lbSoldado = new javax.swing.JLabel();
        rbSegundoSargento = new javax.swing.JRadioButton();
        lbSegundoTenente = new javax.swing.JLabel();
        lbSegundoSargento = new javax.swing.JLabel();
        rbSubtenente = new javax.swing.JRadioButton();
        rbAspirante = new javax.swing.JRadioButton();
        rbSegundoTenente = new javax.swing.JRadioButton();
        lbPrimeiroSargento = new javax.swing.JLabel();
        rbPrimeiroSargento = new javax.swing.JRadioButton();
        lbPrimeiroTenente = new javax.swing.JLabel();
        rbPrimeiroTenente = new javax.swing.JRadioButton();
        lbCapitao = new javax.swing.JLabel();
        rbCapitao = new javax.swing.JRadioButton();
        LbSexo1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        chkDescascarBatatas = new javax.swing.JCheckBox();
        chkLimparBanheiro = new javax.swing.JCheckBox();
        chkLimparCozinha = new javax.swing.JCheckBox();
        chkCozinharAlmoco = new javax.swing.JCheckBox();
        chkCozinharJanta = new javax.swing.JCheckBox();
        chkAlimentarCavalos = new javax.swing.JCheckBox();
        chkLimparEstabulos = new javax.swing.JCheckBox();
        chkRecarregar = new javax.swing.JCheckBox();
        chkTrocarEncanamento = new javax.swing.JCheckBox();
        chkLevantarBandeira = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jbCadastrarTarefa = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        BtBuscarSoldado = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 0));

        JpDadosMilitar.setBackground(new java.awt.Color(164, 199, 158));
        JpDadosMilitar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Dados do Militar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Microsoft JhengHei Light", 1, 13), new java.awt.Color(51, 102, 0))); // NOI18N

        LbCodigo.setText("Código:");

        LbNome.setText("Nome:");

        LbSexo.setText("Sexo:");

        LbCpf.setText("CPF:");

        LbRg.setText("RG:");

        LbNascimento.setText("Nascimento:");

        LbIdade.setText("Idade:");

        LbEstado.setText("Estado:");

        try {
            ftfCodigo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftfCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftfRg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftfNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftfIdade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        buttonGroup2.add(rbMasculino);
        rbMasculino.setText("Masculino");
        rbMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMasculinoActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbFeminino);
        rbFeminino.setText("Feminino");

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SP", "RJ", "MG", "ES", "DF" }));

        lbSubtenente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_06_Subtenente.png"))); // NOI18N

        buttonGroup1.add(rbSoldado);
        rbSoldado.setText("Soldado");
        rbSoldado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSoldadoActionPerformed(evt);
            }
        });

        lbAspirante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_07_Aspirante.png"))); // NOI18N

        buttonGroup1.add(rbCabo);
        rbCabo.setText("Cabo");
        rbCabo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCaboActionPerformed(evt);
            }
        });

        lbCabo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_02_Cabo.png"))); // NOI18N

        lbTerceiroSargento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_03_Terceiro-Sargento.png"))); // NOI18N

        buttonGroup1.add(rbTerceiroSargento);
        rbTerceiroSargento.setText("3º Sargento");
        rbTerceiroSargento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTerceiroSargentoActionPerformed(evt);
            }
        });

        lbSoldado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_01_Soldado.png"))); // NOI18N

        buttonGroup1.add(rbSegundoSargento);
        rbSegundoSargento.setText("2º Sargento");
        rbSegundoSargento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSegundoSargentoActionPerformed(evt);
            }
        });

        lbSegundoTenente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_08_Segundo-Tenente.png"))); // NOI18N

        lbSegundoSargento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_04_Segundo-Sargento.png"))); // NOI18N

        buttonGroup1.add(rbSubtenente);
        rbSubtenente.setText("Subtenente");
        rbSubtenente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSubtenenteActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbAspirante);
        rbAspirante.setText("Aspirante");
        rbAspirante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAspiranteActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbSegundoTenente);
        rbSegundoTenente.setText("2º Tenente");
        rbSegundoTenente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSegundoTenenteActionPerformed(evt);
            }
        });

        lbPrimeiroSargento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_05_Primeiro-Sargento..png"))); // NOI18N

        buttonGroup1.add(rbPrimeiroSargento);
        rbPrimeiroSargento.setText("1º Sargento");
        rbPrimeiroSargento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPrimeiroSargentoActionPerformed(evt);
            }
        });

        lbPrimeiroTenente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_09_Primeiro-Tenente.png"))); // NOI18N

        buttonGroup1.add(rbPrimeiroTenente);
        rbPrimeiroTenente.setText("1º Tenente");
        rbPrimeiroTenente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPrimeiroTenenteActionPerformed(evt);
            }
        });

        lbCapitao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icon_10_Capitão.png"))); // NOI18N

        buttonGroup1.add(rbCapitao);
        rbCapitao.setText("Capitão");
        rbCapitao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCapitaoActionPerformed(evt);
            }
        });

        LbSexo1.setText("Patente:");

        javax.swing.GroupLayout JpDadosMilitarLayout = new javax.swing.GroupLayout(JpDadosMilitar);
        JpDadosMilitar.setLayout(JpDadosMilitarLayout);
        JpDadosMilitarLayout.setHorizontalGroup(
            JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSoldado)
                                    .addComponent(rbSoldado)
                                    .addComponent(lbSubtenente)
                                    .addComponent(rbSubtenente))
                                .addGap(18, 18, 18)
                                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbCabo)
                                    .addComponent(rbCabo)
                                    .addComponent(lbAspirante)
                                    .addComponent(rbAspirante))
                                .addGap(18, 18, 18)
                                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTerceiroSargento)
                                    .addComponent(rbTerceiroSargento)
                                    .addComponent(lbSegundoTenente)
                                    .addComponent(rbSegundoTenente)))
                            .addComponent(LbSexo1))
                        .addGap(18, 18, 18)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSegundoSargento)
                            .addComponent(rbSegundoSargento)
                            .addComponent(lbPrimeiroTenente)
                            .addComponent(rbPrimeiroTenente))
                        .addGap(18, 18, 18)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPrimeiroSargento)
                            .addComponent(rbPrimeiroSargento)
                            .addComponent(lbCapitao)
                            .addComponent(rbCapitao)))
                    .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbSexo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbMasculino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbFeminino, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbCpf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfCpf))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbRg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ftfRg, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                                .addComponent(LbNascimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LbEstado)
                            .addComponent(LbIdade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfIdade)
                            .addComponent(cbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        JpDadosMilitarLayout.setVerticalGroup(
            JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbCodigo)
                    .addComponent(LbCpf)
                    .addComponent(LbIdade)
                    .addComponent(ftfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbNome)
                    .addComponent(LbRg)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbEstado)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbSexo)
                    .addComponent(LbNascimento)
                    .addComponent(ftfNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbMasculino)
                    .addComponent(rbFeminino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPrimeiroSargento, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTerceiroSargento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lbCabo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(JpDadosMilitarLayout.createSequentialGroup()
                            .addComponent(LbSexo1)
                            .addGap(13, 13, 13)
                            .addComponent(lbSoldado))
                        .addComponent(lbSegundoSargento)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rbSoldado)
                    .addComponent(rbCabo)
                    .addComponent(rbTerceiroSargento)
                    .addComponent(rbSegundoSargento)
                    .addComponent(rbPrimeiroSargento))
                .addGap(18, 18, 18)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbSubtenente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAspirante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbSegundoTenente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbPrimeiroTenente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCapitao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JpDadosMilitarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rbSubtenente)
                    .addComponent(rbAspirante)
                    .addComponent(rbSegundoTenente)
                    .addComponent(rbPrimeiroTenente)
                    .addComponent(rbCapitao))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(164, 199, 158));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Quadro de Tarefas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        chkDescascarBatatas.setText("Descascar Batatas");
        chkDescascarBatatas.setEnabled(false);

        chkLimparBanheiro.setText("Limpar Banheiro");
        chkLimparBanheiro.setEnabled(false);

        chkLimparCozinha.setText("Limpar Cozinha");
        chkLimparCozinha.setEnabled(false);

        chkCozinharAlmoco.setText("Cozinhar almoço");
        chkCozinharAlmoco.setEnabled(false);

        chkCozinharJanta.setText("Cozinhar Janta");
        chkCozinharJanta.setEnabled(false);

        chkAlimentarCavalos.setText("Alimentar Cavalos");
        chkAlimentarCavalos.setEnabled(false);

        chkLimparEstabulos.setText("Limpar Estabulos");
        chkLimparEstabulos.setEnabled(false);

        chkRecarregar.setText("Recarregar Armamento");
        chkRecarregar.setEnabled(false);

        chkTrocarEncanamento.setText("Trocar encanamento");
        chkTrocarEncanamento.setEnabled(false);

        chkLevantarBandeira.setText("Levantar Bandeira");
        chkLevantarBandeira.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDescascarBatatas)
                    .addComponent(chkLimparBanheiro)
                    .addComponent(chkCozinharAlmoco)
                    .addComponent(chkLimparCozinha))
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkLimparEstabulos)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkCozinharJanta)
                            .addComponent(chkAlimentarCavalos))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkTrocarEncanamento)
                            .addComponent(chkLevantarBandeira)))
                    .addComponent(chkRecarregar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chkDescascarBatatas)
                    .addComponent(chkCozinharJanta)
                    .addComponent(chkTrocarEncanamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chkLimparBanheiro)
                    .addComponent(chkAlimentarCavalos)
                    .addComponent(chkLevantarBandeira))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkLimparCozinha)
                    .addComponent(chkLimparEstabulos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chkCozinharAlmoco)
                    .addComponent(chkRecarregar))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(164, 199, 158));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 0)));

        jbCadastrarTarefa.setText("Cadastrar ");
        jbCadastrarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarTarefaActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.setEnabled(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        BtBuscarSoldado.setText("Buscar Militar");
        BtBuscarSoldado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBuscarSoldadoActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbCadastrarTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtBuscarSoldado)
                .addGap(18, 18, 18)
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEditar)
                    .addComponent(btSalvar)
                    .addComponent(jbCadastrarTarefa)
                    .addComponent(BtBuscarSoldado)
                    .addComponent(btVoltar))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JpDadosMilitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JpDadosMilitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JpDadosMilitar.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
 //Função para Salvar o Militar no Array e também verifica se o Codigo do militar ja existe.
    private void salvarMilitar() throws ClassNotFoundException {
        Militar milit = new Militar();
        
        milit.setCodigo(Integer.parseInt(ftfCodigo.getText()));
        milit.setNome(tfNome.getText());
        milit.setCpf(ftfCpf.getText());
        milit.setRg(ftfRg.getText());
        milit.setEstado((String) cbEstado.getSelectedItem());
        milit.setSexo(rbMasculino.isSelected()?"Masculino":"Feminino");
        milit.setNascimento(ftfNascimento.getText());
        milit.setIdade(Integer.parseInt(ftfIdade.getText()));
        if(rbCapitao.isSelected()){
            milit.setPatente("Capitão");
        }
        else if(rbPrimeiroTenente.isSelected()){
            milit.setPatente("PrimeiroTenente");
        }
        else if(rbSegundoTenente.isSelected()){
            milit.setPatente("SegundoTenente");
        }
        else if(rbAspirante.isSelected()){
            milit.setPatente("Aspirante");
        }
        else if(rbSubtenente.isSelected()){
            milit.setPatente("Subtenente");
        }
        else if(rbPrimeiroSargento.isSelected()){
            milit.setPatente("PrimeiroSargento");
        }
        else if(rbSegundoSargento.isSelected()){
            milit.setPatente("SegundoSargento");
        }
        else if(rbTerceiroSargento.isSelected()){
            milit.setPatente("TerceiroSargento");
        }
        else if(rbCabo.isSelected()){
            milit.setPatente("Cabo");
        }
        else if(rbSoldado.isSelected()){
            milit.setPatente("Soldado");
        }
        milit.setDescascar(chkDescascarBatatas.isSelected());
        milit.setLimparBanheiro(chkLimparBanheiro.isSelected());
        milit.setLimparCozinha(chkLimparCozinha.isSelected());
        milit.setCozinharArmoco(chkCozinharAlmoco.isSelected());
        milit.setCozinharJanta(chkCozinharJanta.isSelected());
        milit.setAlimentarCavalos(chkAlimentarCavalos.isSelected());
        milit.setLimparEstabulos(chkLimparEstabulos.isSelected());
        milit.setRecarregarArmamento(chkRecarregar.isSelected());
        milit.setTrocarEncanamento(chkTrocarEncanamento.isSelected());
        milit.setLevantarBandeira(chkLevantarBandeira.isSelected());
        
        //verificarCodigo(militar);
        
        try {
            Cadastra.receberMilitar(milit);
        } catch (SQLException ex) {
            Logger.getLogger(FrameCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
     //Primeira Metodo que usei para Salvar o Militar SOMENTE, sem as CHeckBox
     private void salvarSold() {
        militar = new Militar();
        militar.setNome(tfNome.getText());
        militar.setCodigo(Integer.parseInt(ftfCodigo.getText()));
        militar.setCpf(ftfCpf.getText());
        militar.setRg(ftfRg.getText());
        militar.setEstado((String) cbEstado.getSelectedItem());
        militar.setSexo(rbMasculino.isSelected()?"Masculino":"Feminino");
        militar.setNascimento(ftfNascimento.getText());
        militar.setIdade(Integer.parseInt(ftfIdade.getText()));
       
        
        
        verificarNada(militar);
        
    }
    
     //Verificação do Codigo do militar para ver se ele existe se não ele nao cadastra.
//    private void verificarCodigo(Militar militar) {
//        int cont = 0;
//        for(int i=0;i<menu.sold.size();i++){
//            if(Integer.parseInt(ftfCodigo.getText()) == (menu.sold.get(i).getCodigo())){
//                JOptionPane.showMessageDialog(null, "Codigo ja cadastrado");
//                cont++;
//            }
//        }
//        if(cont == 0 ){
//            inserirMilitar(militar);
//            JOptionPane.showMessageDialog(null,"Militar Inserido");
//            limparCamposFrame();
//        }
//    }
    
    //Metodo para inserção sem Verificação.
    private void verificarNada(Militar militar) {
       
        
        
            inserirMilitar(militar);
            JOptionPane.showMessageDialog(null,"Militar Inserido");
            limparCamposFrame();
        
    }
     //Metodo que insere o Militar no ArrayList
     private void inserirMilitar(Militar militar) {
        
         menu.salvarSoldado(militar);
    } 
     //Metodo que Cadastra o Militar Inteiro.
    private void jbCadastrarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarTarefaActionPerformed
         
        try {
            /*
            militar.setDescascar(chkDescascarBatatas.isSelected());
            militar.setLimparBanheiro(chkLimparBanheiro.isSelected());
            militar.setLimparCozinha(chkLimparCozinha.isSelected());
            militar.setCozinharArmoco(chkCozinharAlmoco.isSelected());
            militar.setCozinharJanta(chkCozinharJanta.isSelected());
            militar.setAlimentarCavalos(chkAlimentarCavalos.isSelected());
            militar.setLimparEstabulos(chkLimparEstabulos.isSelected());
            militar.setRecarregarArmamento(chkRecarregar.isSelected());
            militar.setTrocarEncanamento(chkTrocarEncanamento.isSelected());
            militar.setLevantarBandeira(chkLevantarBandeira.isSelected());
            */ 
            salvarMilitar();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrameCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        

       //inserirSoldado(militar);
        
        //limpar campos e inabilitar
        rbSegundoTenente.setEnabled(true);
        rbAspirante.setEnabled(true);
        rbSubtenente.setEnabled(true);
        rbSegundoSargento.setEnabled(true);
        rbTerceiroSargento.setEnabled(true);
        rbCabo.setEnabled(true);
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(false);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(false);
        //insererClienteArray(militar);
        limparCamposFrame();

    }//GEN-LAST:event_jbCadastrarTarefaActionPerformed

    private void rbMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMasculinoActionPerformed

    }//GEN-LAST:event_rbMasculinoActionPerformed
     //METODOS PARA ENABLES DE PATENTE
    private void rbSoldadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSoldadoActionPerformed
            militar.setPatente("Soldado");
            chkDescascarBatatas.setEnabled(true);
            chkLimparBanheiro.setEnabled(true);
            chkLimparCozinha.setEnabled(true);
            chkLimparEstabulos.setEnabled(true);
            chkRecarregar.setEnabled(false);
            chkAlimentarCavalos.setEnabled(false);
            chkCozinharAlmoco.setEnabled(false);
            chkCozinharJanta.setEnabled(false);
            chkTrocarEncanamento.setEnabled(false);
            chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbSoldadoActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
       dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

       //Botão editar que abre alguns campos para edição
    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        
      
        ftfCpf.setEditable(true);
        ftfRg.setEditable(true);
        jbCadastrarTarefa.setEnabled(false);
        btSalvar.setEnabled(true);
        
        
    }//GEN-LAST:event_btEditarActionPerformed
    
    
    //Botão para Buscar Militar.
    private void BtBuscarSoldadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBuscarSoldadoActionPerformed
        
        Militar milit = new Militar();
        String nome =  tfNome.getText();
        
        try {
            milit = Busca.localizaMilitar(nome);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(FrameCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        ftfCodigo.setText(milit.getCodigo()+ "");
        tfNome.setText(milit.getNome());
        ftfCpf.setText(milit.getCpf());
        ftfRg.setText(milit.getRg());
        cbEstado.setSelectedItem(milit.getEstado());
        rbMasculino.setSelected(milit.getSexo().equals("Masculino"));
        rbFeminino.setSelected(milit.getSexo().equals("Feminino")); 
        ftfNascimento.setText(milit.getNascimento());
        rbCapitao.setSelected(milit.getPatente().equals("Capitão"));
        rbCapitao.setEnabled(false);
        rbPrimeiroTenente.setSelected(milit.getPatente().equals("PrimeiroTenente"));
        rbPrimeiroTenente.setEnabled(false);
        rbSegundoTenente.setSelected(milit.getPatente().equals("SegundoTenente"));
        rbSegundoTenente.setEnabled(false);
        rbAspirante.setSelected(milit.getPatente().equals("Aspirante"));
        rbAspirante.setEnabled(false);
        rbSubtenente.setSelected(milit.getPatente().equals("Subtenente"));
        rbSubtenente.setEnabled(false);
        rbPrimeiroSargento.setSelected(milit.getPatente().equals("PrimeiroSargento"));
        rbPrimeiroSargento.setEnabled(false);
        rbSegundoSargento.setSelected(milit.getPatente().equals("SegundoSargento"));
        rbSegundoSargento.setEnabled(false);
        rbTerceiroSargento.setSelected(milit.getPatente().equals("TerceiroSargento"));
        rbTerceiroSargento.setEnabled(false);
        rbCabo.setSelected(milit.getPatente().equals("Cabo"));
        rbCabo.setEnabled(false);
        rbSoldado.setSelected(milit.getPatente().equals("Soldado"));
        rbSoldado.setEnabled(false);
        ftfIdade.setText(milit.getIdade()+"");
        chkDescascarBatatas.setSelected(milit.isDescascar());
        chkLimparBanheiro.setSelected(milit.isLimparBanheiro());
        chkLimparCozinha.setSelected(milit.isLimparCozinha());
        chkCozinharAlmoco.setSelected(milit.isCozinharArmoco());
        chkCozinharJanta.setSelected(milit.isCozinharJanta());
        chkAlimentarCavalos.setSelected(milit.isAlimentarCavalos());
        chkLimparEstabulos.setSelected(milit.isLimparEstabulos());
        chkRecarregar.setSelected(milit.isRecarregarArmamento());
        chkTrocarEncanamento.setSelected(milit.isTrocarEncanamento());
        chkLevantarBandeira.setSelected(milit.isLevantarBandeira());
        
        btEditar.setEnabled(true);
        
        
    }//GEN-LAST:event_BtBuscarSoldadoActionPerformed

    private void rbCaboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCaboActionPerformed
        militar.setPatente("Cabo");
        chkDescascarBatatas.setEnabled(true);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(true);
        chkLimparEstabulos.setEnabled(true);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbCaboActionPerformed

    private void rbTerceiroSargentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTerceiroSargentoActionPerformed
        militar.setPatente("TerceiroSargento");
        chkDescascarBatatas.setEnabled(true);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(true);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(true);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbTerceiroSargentoActionPerformed

    private void rbSegundoSargentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSegundoSargentoActionPerformed
        militar.setPatente("SegundoSargento");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(true);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(true);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(true);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbSegundoSargentoActionPerformed
    
    private void rbSegundoTenenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSegundoTenenteActionPerformed
        militar.setPatente("SegundoTenente");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(false);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(true);
        chkTrocarEncanamento.setEnabled(true);
        chkLevantarBandeira.setEnabled(true);

    }//GEN-LAST:event_rbSegundoTenenteActionPerformed

    private void rbAspiranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAspiranteActionPerformed
        militar.setPatente("Aspirante");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(true);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(true);
        chkLevantarBandeira.setEnabled(true);

    }//GEN-LAST:event_rbAspiranteActionPerformed

    private void rbSubtenenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSubtenenteActionPerformed
        militar.setPatente("Subtenente");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(true);
        chkCozinharAlmoco.setEnabled(true);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(true);
        chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbSubtenenteActionPerformed
    
//Metodo para a edição de certos campos do Militar.
    private void editarSoldado() {
        
        Militar solda = null;
        
        for (int i = 0; i < menu.sold.size(); i++) {
            if( codigoGlobal == menu.sold.get(i).getCodigo()){
                
                solda = menu.sold.get(i);
                
             }
        }
        solda.setNome(tfNome.getText());
        solda.setCodigo(Integer.parseInt(ftfCodigo.getText()));
        solda.setIdade(Integer.parseInt(ftfIdade.getText()));
        solda.setCpf(ftfCpf.getText());
        solda.setRg(ftfRg.getText());
        solda.setDescascar(chkDescascarBatatas.isSelected());
        solda.setLimparBanheiro(chkLimparBanheiro.isSelected());
        solda.setLimparCozinha(chkLimparCozinha.isSelected());
        solda.setLimparEstabulos(chkLimparEstabulos.isSelected());
        solda.setRecarregarArmamento(chkRecarregar.isSelected());
        solda.setAlimentarCavalos(chkAlimentarCavalos.isSelected());
        solda.setCozinharArmoco(chkCozinharAlmoco.isSelected());
        solda.setCozinharJanta(chkCozinharJanta.isSelected());
        solda.setTrocarEncanamento(chkTrocarEncanamento.isSelected());
        solda.setLevantarBandeira(chkLevantarBandeira.isSelected());
        
        JOptionPane.showMessageDialog(null, "Soldado Alterado");
        limparCamposFrame();
    }
    
    //Botao Salvar  para que a edição seja feita chamando o metodo.
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
            
        Militar milit = new Militar();
        milit.setCpf(ftfCpf.getText());
        milit.setNome(tfNome.getText());
        milit.setRg(ftfRg.getText());
        milit.setNascimento(ftfNascimento.getText());
        milit.setSexo(rbMasculino.isSelected()?"Masculino":"Feminino");
        milit.setEstado((String)cbEstado.getSelectedItem());
        milit.setIdade(Integer.parseInt(ftfIdade.getText()));
        milit.setAlimentarCavalos(chkAlimentarCavalos.isSelected());
        milit.setCozinharArmoco(chkCozinharAlmoco.isSelected());
        milit.setCozinharJanta(chkCozinharJanta.isSelected());
        milit.setDescascar(chkDescascarBatatas.isSelected());
        milit.setLevantarBandeira(chkLevantarBandeira.isSelected());
        milit.setLimparBanheiro(chkLimparBanheiro.isSelected());
        milit.setLimparCozinha(chkLimparCozinha.isSelected());
        milit.setLimparEstabulos(chkLimparEstabulos.isSelected());
        milit.setRecarregarArmamento(chkRecarregar.isSelected());
        milit.setTrocarEncanamento(chkTrocarEncanamento.isSelected());
        
        try {
            Altera.alteraCliente(milit);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(FrameCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //-------------------------------------------------------------------------------------------
            jbCadastrarTarefa.setEnabled(true);
            
            ftfCodigo.setEditable(true);
            tfNome.setEditable(true);
            ftfCpf.setEditable(true);
            ftfRg.setEditable(true);
            ftfIdade.setEnabled(true);
            cbEstado.setEnabled(true);
            ftfNascimento.setEditable(true);
            rbMasculino.setEnabled(true);
            rbFeminino.setEnabled(true);
            rbSegundoTenente.setEnabled(true);
            rbAspirante.setEnabled(true);
            rbSubtenente.setEnabled(true);
            rbSegundoSargento.setEnabled(true);
            rbTerceiroSargento.setEnabled(true);
            rbCabo.setEnabled(true);
            rbSoldado.setEnabled(true);
            btSalvar.setEnabled(false);
            btEditar.setEnabled(false);
            chkDescascarBatatas.setEnabled(false);
            chkLimparBanheiro.setEnabled(false);
            chkLimparCozinha.setEnabled(false);
            chkLimparEstabulos.setEnabled(false);
            chkRecarregar.setEnabled(false);
            chkAlimentarCavalos.setEnabled(false);
            chkCozinharAlmoco.setEnabled(false);
            chkCozinharJanta.setEnabled(false);
            chkTrocarEncanamento.setEnabled(false);
            chkLevantarBandeira.setEnabled(false);
            
    }//GEN-LAST:event_btSalvarActionPerformed

    private void rbPrimeiroSargentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPrimeiroSargentoActionPerformed
        militar.setPatente("PrimeiroSargento");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(true);
        chkAlimentarCavalos.setEnabled(true);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(true);
        chkTrocarEncanamento.setEnabled(true);
        chkLevantarBandeira.setEnabled(false);
    }//GEN-LAST:event_rbPrimeiroSargentoActionPerformed

    private void rbPrimeiroTenenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPrimeiroTenenteActionPerformed
        militar.setPatente("PrimeiroTenente");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(false);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(true);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(true);
    }//GEN-LAST:event_rbPrimeiroTenenteActionPerformed

    private void rbCapitaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCapitaoActionPerformed
        militar.setPatente("Capitao");
        chkDescascarBatatas.setEnabled(false);
        chkLimparBanheiro.setEnabled(false);
        chkLimparCozinha.setEnabled(false);
        chkLimparEstabulos.setEnabled(false);
        chkRecarregar.setEnabled(false);
        chkAlimentarCavalos.setEnabled(false);
        chkCozinharAlmoco.setEnabled(false);
        chkCozinharJanta.setEnabled(false);
        chkTrocarEncanamento.setEnabled(false);
        chkLevantarBandeira.setEnabled(true);
    }//GEN-LAST:event_rbCapitaoActionPerformed
    
    
    
     //Buscar Militar Pelo Nome
     private Militar buscarSoldadoNome(String nome){
        Militar so = null;
        for(int i=0;i<menu.sold.size();i++){
            if(nome.equals(menu.sold.get(i).getNome())){
                System.out.println("Soldado: "+menu.sold.get(i).getNome());
                so = menu.sold.get(i);
            }
        }
        if(so==null){
                JOptionPane.showMessageDialog(null,"Soldado não encontrado.");
        }
        return so;
    }
        /* private void excluirSoldadoArray(String nome){
        Militar militar = null;
        for(int i=0;i<sold.size();i++){
            if(nome.equals(milit.get(i).getNome())){
                System.out.println("Militar: "+milit.get(i).getNome());
                milit.get(i).setLimparCozinha(false);
                milit.get(i).setAlimentarCavalos(false);
                
                milit.remove(chkDescascarBatatas);
                milit.remove(chkLimparBanheiro);
                milit.remove(chkLimparCozinha);
                milit.remove(chkLimparEstabulos);
                milit.remove(chkRecarregar);
                milit.remove(chkCozinharAlmoco);
                milit.remove(chkCozinharJanta);
                milit.remove(chkTrocarEncanamento);
                milit.remove(chkLevantarBandeira);
                
                
                
                
                JOptionPane.showMessageDialog(null,"tarefa excluido com sucesso!");
            }
        }
        if(militar == null){
                JOptionPane.showMessageDialog(null,"Cliente não encontrado.");
        }
    }
    */
   

//limpa os campos de  cadastro 
    
    public void limparCamposFrame(){
        ftfCodigo.setText("");  
        tfNome.setText("");
        ftfCpf.setText("");
        ftfRg.setText("");
        ftfNascimento.setText("");
        ftfIdade.setText("");
        cbEstado.setSelectedIndex(-1);
        buttonGroup2.clearSelection();
        buttonGroup1.clearSelection();
        chkDescascarBatatas.setSelected(false);
        chkLimparBanheiro.setSelected(false);
        chkLimparCozinha.setSelected(false);
        chkLimparEstabulos.setSelected(false);
        chkRecarregar.setSelected(false);
        chkAlimentarCavalos.setSelected(false);
        chkCozinharAlmoco.setSelected(false);
        chkCozinharJanta.setSelected(false);
        chkTrocarEncanamento.setSelected(false);
        chkLevantarBandeira.setSelected(false);
                
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtBuscarSoldado;
    private javax.swing.JPanel JpDadosMilitar;
    private javax.swing.JLabel LbCodigo;
    private javax.swing.JLabel LbCpf;
    private javax.swing.JLabel LbEstado;
    private javax.swing.JLabel LbIdade;
    private javax.swing.JLabel LbNascimento;
    private javax.swing.JLabel LbNome;
    private javax.swing.JLabel LbRg;
    private javax.swing.JLabel LbSexo;
    private javax.swing.JLabel LbSexo1;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVoltar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JCheckBox chkAlimentarCavalos;
    private javax.swing.JCheckBox chkCozinharAlmoco;
    private javax.swing.JCheckBox chkCozinharJanta;
    private javax.swing.JCheckBox chkDescascarBatatas;
    private javax.swing.JCheckBox chkLevantarBandeira;
    private javax.swing.JCheckBox chkLimparBanheiro;
    private javax.swing.JCheckBox chkLimparCozinha;
    private javax.swing.JCheckBox chkLimparEstabulos;
    private javax.swing.JCheckBox chkRecarregar;
    private javax.swing.JCheckBox chkTrocarEncanamento;
    private javax.swing.JFormattedTextField ftfCodigo;
    private javax.swing.JFormattedTextField ftfCpf;
    private javax.swing.JFormattedTextField ftfIdade;
    private javax.swing.JFormattedTextField ftfNascimento;
    private javax.swing.JFormattedTextField ftfRg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbCadastrarTarefa;
    private javax.swing.JLabel lbAspirante;
    private javax.swing.JLabel lbCabo;
    private javax.swing.JLabel lbCapitao;
    private javax.swing.JLabel lbPrimeiroSargento;
    private javax.swing.JLabel lbPrimeiroTenente;
    private javax.swing.JLabel lbSegundoSargento;
    private javax.swing.JLabel lbSegundoTenente;
    private javax.swing.JLabel lbSoldado;
    private javax.swing.JLabel lbSubtenente;
    private javax.swing.JLabel lbTerceiroSargento;
    private javax.swing.JRadioButton rbAspirante;
    private javax.swing.JRadioButton rbCabo;
    private javax.swing.JRadioButton rbCapitao;
    private javax.swing.JRadioButton rbFeminino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JRadioButton rbPrimeiroSargento;
    private javax.swing.JRadioButton rbPrimeiroTenente;
    private javax.swing.JRadioButton rbSegundoSargento;
    private javax.swing.JRadioButton rbSegundoTenente;
    private javax.swing.JRadioButton rbSoldado;
    private javax.swing.JRadioButton rbSubtenente;
    private javax.swing.JRadioButton rbTerceiroSargento;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
}
